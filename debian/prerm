#!/bin/sh
# prerm script for n4d-ldap
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

PACKAGE_NAME="lliurex-kdeconnect-disabler"

ORIGINAL_DBUS_FILE="/usr/share/dbus-1/services/org.kde.kdeconnect.service"
DIVERT_DBUS_FILE="/usr/share/lliurex-kdeconnect-disabler/diversions/org.kde.kdeconnect.service.diverted"
LLIUREX_DBUS_FILE="/usr/share/lliurex-kdeconnect-disabler/dbus/org.kde.kdeconnect.service.lliurex"

ORIGINAL_APPS_FILE="/usr/share/applications/org.kde.kdeconnect.daemon.desktop"
DIVERT_APPS_FILE="/usr/share/lliurex-kdeconnect-disabler/diversions/org.kde.kdeconnect.daemon.desktop.diverted"
LLIUREX_APPS_FILE="/usr/share/lliurex-kdeconnect-disabler/applications/org.kde.kdeconnect.daemon.desktop"

case "$1" in
    upgrade|deconfigure)
    ;;

    remove|purge)

	if [ -L ${ORIGINAL_DBUS_FILE} ] ; then
        	rm -rf $ORIGINAL_DBUS_FILE || true
		dpkg-divert --package  ${PACKAGE_NAME} --rename --quiet --remove ${ORIGINAL_DBUS_FILE}|| true
		
        fi

        if [ -L ${ORIGINAL_APPS_FILE} ] ; then
                rm -rf $ORIGINAL_APPS_FILE || true
                dpkg-divert --package  ${PACKAGE_NAME} --rename --quiet --remove ${ORIGINAL_APPS_FILE}|| true
                
        fi


    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
